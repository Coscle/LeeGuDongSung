{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack\\\\Workspace\\\\dongsung\\\\src\\\\components\\\\message\\\\MessageList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './messageList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageList({\n  onSelectMessage\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    fetchMessages();\n  }, []);\n  const fetchMessages = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3001/messages\");\n      setMessages(response.data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n\n  // ÎåÄÌôîÎ∞© Î™©Î°ù ÏÉùÏÑ±\n  const chatRooms = {};\n  messages.forEach(message => {\n    if (message.sender_no === 1 || message.receiver_no === 1) {\n      // sender_noÍ∞Ä 1Ïù¥Í±∞ÎÇò receiver_noÍ∞Ä 1Ïù∏ Í≤ΩÏö∞Îßå Ï≤òÎ¶¨\n      const roomId = Math.min(message.sender_no, message.receiver_no) + '_' + Math.max(message.sender_no, message.receiver_no);\n      if (!chatRooms[roomId]) {\n        chatRooms[roomId] = [];\n      }\n      chatRooms[roomId].push(message);\n    }\n  });\n  const handleRoomClick = roomId => {\n    // ÏÑ†ÌÉùÎêú ÎåÄÌôîÎ∞©Ïùò Î™®Îì† Î©îÏãúÏßÄÎ•º Ï∂îÏ∂ú\n    const selectedRoomMessages = chatRooms[roomId];\n    // onSelectMessage Ìï®ÏàòÎ•º Ìò∏Ï∂úÌïòÏó¨ ÏÑ†ÌÉùÎêú ÎåÄÌôîÎ∞©Ïùò Î™®Îì† Î©îÏãúÏßÄÎ•º Ï†ÑÎã¨\n    onSelectMessage(selectedRoomMessages);\n  };\n  const handleDeleteRoom = roomId => {\n    // Ìï¥Îãπ ÎåÄÌôîÎ∞© ÏÇ≠Ï†ú Î°úÏßÅ Íµ¨ÌòÑ\n    // ÏÑ†ÌÉùÎêú roomIdÏóê Ìï¥ÎãπÌïòÎäî ÎåÄÌôîÎ∞©ÏùÑ ÏÇ≠Ï†úÌïòÍ≥† UIÎ•º ÏóÖÎç∞Ïù¥Ìä∏\n    console.log(\"Delete room:\", roomId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-list-container\",\n    children: Object.keys(chatRooms).map((roomId, index) => {\n      const roomMessages = chatRooms[roomId];\n      const lastMessage = roomMessages[roomMessages.length - 1];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-list-box\",\n        onClick: () => handleRoomClick(roomId),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-list\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-people\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-ib\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: lastMessage.sender_no === 1 ? `${lastMessage.sender_no}ÎãòÏù¥ Î≥¥ÎÇ∏ Î©îÏãúÏßÄ` : `${lastMessage.receiver_no}ÎãòÏù¥ Î≥¥ÎÇ∏ Î©îÏãúÏßÄ`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: lastMessage.message_content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-button\",\n              onClick: () => handleDeleteRoom(roomId),\n              children: \"\\uD83D\\uDDD1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(MessageList, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = MessageList;\nexport default MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","MessageList","onSelectMessage","_s","messages","setMessages","fetchMessages","response","get","data","error","console","chatRooms","forEach","message","sender_no","receiver_no","roomId","Math","min","max","push","handleRoomClick","selectedRoomMessages","handleDeleteRoom","log","className","children","Object","keys","map","index","roomMessages","lastMessage","length","onClick","fileName","_jsxFileName","lineNumber","columnNumber","message_content","_c","$RefreshReg$"],"sources":["C:/FullStack/Workspace/dongsung/src/components/message/MessageList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './messageList.css'; \r\n\r\nfunction MessageList({ onSelectMessage }) {\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchMessages();\r\n  }, []);\r\n\r\n  const fetchMessages = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:3001/messages\");\r\n      setMessages(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching messages:', error);\r\n    }\r\n  };\r\n\r\n  // ÎåÄÌôîÎ∞© Î™©Î°ù ÏÉùÏÑ±\r\n  const chatRooms = {};\r\n  messages.forEach(message => {\r\n    if (message.sender_no === 1 || message.receiver_no === 1) { // sender_noÍ∞Ä 1Ïù¥Í±∞ÎÇò receiver_noÍ∞Ä 1Ïù∏ Í≤ΩÏö∞Îßå Ï≤òÎ¶¨\r\n      const roomId = Math.min(message.sender_no, message.receiver_no) + '_' + Math.max(message.sender_no, message.receiver_no);\r\n      if (!chatRooms[roomId]) {\r\n        chatRooms[roomId] = [];\r\n      }\r\n      chatRooms[roomId].push(message);\r\n    }\r\n  });\r\n\r\n  const handleRoomClick = (roomId) => {\r\n    // ÏÑ†ÌÉùÎêú ÎåÄÌôîÎ∞©Ïùò Î™®Îì† Î©îÏãúÏßÄÎ•º Ï∂îÏ∂ú\r\n    const selectedRoomMessages = chatRooms[roomId];\r\n    // onSelectMessage Ìï®ÏàòÎ•º Ìò∏Ï∂úÌïòÏó¨ ÏÑ†ÌÉùÎêú ÎåÄÌôîÎ∞©Ïùò Î™®Îì† Î©îÏãúÏßÄÎ•º Ï†ÑÎã¨\r\n    onSelectMessage(selectedRoomMessages);\r\n  };\r\n  \r\n  const handleDeleteRoom = (roomId) => {\r\n    // Ìï¥Îãπ ÎåÄÌôîÎ∞© ÏÇ≠Ï†ú Î°úÏßÅ Íµ¨ÌòÑ\r\n    // ÏÑ†ÌÉùÎêú roomIdÏóê Ìï¥ÎãπÌïòÎäî ÎåÄÌôîÎ∞©ÏùÑ ÏÇ≠Ï†úÌïòÍ≥† UIÎ•º ÏóÖÎç∞Ïù¥Ìä∏\r\n    console.log(\"Delete room:\", roomId);\r\n  };\r\n\r\n  return (\r\n    <div className=\"message-list-container\">\r\n      {Object.keys(chatRooms).map((roomId, index) => {\r\n        const roomMessages = chatRooms[roomId];\r\n        const lastMessage = roomMessages[roomMessages.length - 1];\r\n        return (\r\n          <div key={index} className=\"chat-list-box\" onClick={() => handleRoomClick(roomId)}>\r\n            <div className=\"chat-list\">\r\n              <div className=\"chat-people\">\r\n                <div className=\"chat-ib\">\r\n                  <h5>{lastMessage.sender_no === 1 ? `${lastMessage.sender_no}ÎãòÏù¥ Î≥¥ÎÇ∏ Î©îÏãúÏßÄ` : `${lastMessage.receiver_no}ÎãòÏù¥ Î≥¥ÎÇ∏ Î©îÏãúÏßÄ`}</h5>\r\n                  <p>{lastMessage.message_content}</p>\r\n                </div>\r\n                <button className=\"delete-button\" onClick={() => handleDeleteRoom(roomId)}>üóë</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}