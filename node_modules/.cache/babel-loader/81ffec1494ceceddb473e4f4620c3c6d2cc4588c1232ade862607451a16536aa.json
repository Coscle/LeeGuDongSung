{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack\\\\Workspace\\\\dongsung\\\\src\\\\components\\\\message\\\\MessageBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport MessageList from './MessageList';\nimport MessageDetail from './MessageDetail';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageBoard() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  useEffect(() => {\n    // 초기 메시지 리스트를 불러오는 함수 호출\n    fetchMessageList();\n  }, []);\n\n  // 메시지 리스트를 불러오는 함수\n  const fetchMessageList = async () => {\n    try {\n      const response = await axios.get(\"/api/messages\");\n      setMessages(response.data);\n    } catch (error) {\n      console.error('Error fetching message list:', error);\n    }\n  };\n\n  // 메시지를 선택하는 함수\n  const selectMessage = message => {\n    setSelectedMessage(message);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mt-3 mb-4\",\n      children: \"Message Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(MessageList, {\n          messages: messages,\n          onSelectMessage: selectMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: selectedMessage && /*#__PURE__*/_jsxDEV(MessageDetail, {\n          message: selectedMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(MessageBoard, \"iuKRa8DC1NqRBe6Lk7j5aDjHKyQ=\");\n_c = MessageBoard;\nexport default MessageBoard;\nvar _c;\n$RefreshReg$(_c, \"MessageBoard\");","map":{"version":3,"names":["React","useEffect","useState","MessageList","MessageDetail","axios","jsxDEV","_jsxDEV","MessageBoard","_s","messages","setMessages","selectedMessage","setSelectedMessage","fetchMessageList","response","get","data","error","console","selectMessage","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSelectMessage","_c","$RefreshReg$"],"sources":["C:/FullStack/Workspace/dongsung/src/components/message/MessageBoard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport MessageList from './MessageList';\r\nimport MessageDetail from './MessageDetail';\r\nimport axios from 'axios';\r\n\r\nfunction MessageBoard() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [selectedMessage, setSelectedMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // 초기 메시지 리스트를 불러오는 함수 호출\r\n    fetchMessageList();\r\n  }, []);\r\n\r\n  // 메시지 리스트를 불러오는 함수\r\n  const fetchMessageList = async () => {\r\n    try {\r\n      const response = await axios.get(\"/api/messages\");\r\n      setMessages(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching message list:', error);\r\n    }\r\n  };\r\n\r\n  // 메시지를 선택하는 함수\r\n  const selectMessage = (message) => {\r\n    setSelectedMessage(message);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2 className=\"text-center mt-3 mb-4\">Message Board</h2>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">\r\n          {/* 메시지 목록 컴포넌트 */}\r\n          <MessageList messages={messages} onSelectMessage={selectMessage} />\r\n        </div>\r\n        <div className=\"col-md-8\">\r\n          {selectedMessage && <MessageDetail message={selectedMessage} />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageBoard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5DD,SAAS,CAAC,MAAM;IACd;IACAa,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,eAAe,CAAC;MACjDL,WAAW,CAACI,QAAQ,CAACE,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;;EAED;EACA,MAAME,aAAa,GAAIC,OAAO,IAAK;IACjCR,kBAAkB,CAACQ,OAAO,CAAC;EAC7B,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBhB,OAAA;MAAIe,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxDpB,OAAA;MAAKe,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBhB,OAAA;QAAKe,SAAS,EAAC,UAAU;QAAAC,QAAA,eAEvBhB,OAAA,CAACJ,WAAW;UAACO,QAAQ,EAAEA,QAAS;UAACkB,eAAe,EAAER;QAAc;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,eACNpB,OAAA;QAAKe,SAAS,EAAC,UAAU;QAAAC,QAAA,EACtBX,eAAe,iBAAIL,OAAA,CAACH,aAAa;UAACiB,OAAO,EAAET;QAAgB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClB,EAAA,CAtCQD,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAwCrB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}