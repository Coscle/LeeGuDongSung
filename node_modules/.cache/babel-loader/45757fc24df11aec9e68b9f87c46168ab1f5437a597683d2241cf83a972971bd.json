{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack\\\\Workspace\\\\dongsung\\\\src\\\\components\\\\message\\\\MessageList.js\";\nimport React from 'react';\nimport './messageList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageList({\n  messages,\n  onSelectRoom\n}) {\n  // 대화방 목록 생성\n  const chatRooms = {};\n  messages.forEach(message => {\n    if (message.sender_no === 1 || message.receiver_no === 1) {\n      // sender_no가 1이거나 receiver_no가 1인 경우만 처리\n      const roomId = Math.min(message.sender_no, message.receiver_no) + '_' + Math.max(message.sender_no, message.receiver_no);\n      if (!chatRooms[roomId]) {\n        chatRooms[roomId] = [];\n      }\n      chatRooms[roomId].push(message);\n    }\n  });\n  const handleRoomClick = roomId => {\n    // 선택된 대화방의 모든 메시지를 추출\n    const selectedRoomMessages = chatRooms[roomId];\n    // onSelectRoom 함수를 호출하여 선택된 대화방의 모든 메시지를 전달\n    onSelectRoom(selectedRoomMessages);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-list-container\",\n    children: Object.keys(chatRooms).map((roomId, index) => {\n      const roomMessages = chatRooms[roomId];\n      const lastMessage = roomMessages[roomMessages.length - 1];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-list-box\",\n        onClick: () => handleRoomClick(roomId),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-list\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-people\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-ib\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: lastMessage.sender_no === 1 ? 'Sender' : 'Receiver'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: lastMessage.message_content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = MessageList;\nexport default MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MessageList","messages","onSelectRoom","chatRooms","forEach","message","sender_no","receiver_no","roomId","Math","min","max","push","handleRoomClick","selectedRoomMessages","className","children","Object","keys","map","index","roomMessages","lastMessage","length","onClick","fileName","_jsxFileName","lineNumber","columnNumber","message_content","_c","$RefreshReg$"],"sources":["C:/FullStack/Workspace/dongsung/src/components/message/MessageList.js"],"sourcesContent":["import React from 'react';\r\nimport './messageList.css'; \r\n\r\nfunction MessageList({ messages, onSelectRoom }) {\r\n  // 대화방 목록 생성\r\n  const chatRooms = {};\r\n  messages.forEach(message => {\r\n    if (message.sender_no === 1 || message.receiver_no === 1) { // sender_no가 1이거나 receiver_no가 1인 경우만 처리\r\n      const roomId = Math.min(message.sender_no, message.receiver_no) + '_' + Math.max(message.sender_no, message.receiver_no);\r\n      if (!chatRooms[roomId]) {\r\n        chatRooms[roomId] = [];\r\n      }\r\n      chatRooms[roomId].push(message);\r\n    }\r\n  });\r\n\r\n  const handleRoomClick = (roomId) => {\r\n    // 선택된 대화방의 모든 메시지를 추출\r\n    const selectedRoomMessages = chatRooms[roomId];\r\n    // onSelectRoom 함수를 호출하여 선택된 대화방의 모든 메시지를 전달\r\n    onSelectRoom(selectedRoomMessages);\r\n  };\r\n\r\n  return (\r\n    <div className=\"message-list-container\">\r\n      {Object.keys(chatRooms).map((roomId, index) => {\r\n        const roomMessages = chatRooms[roomId];\r\n        const lastMessage = roomMessages[roomMessages.length - 1];\r\n        return (\r\n          <div key={index} className=\"chat-list-box\" onClick={() => handleRoomClick(roomId)}>\r\n            <div className=\"chat-list\">\r\n              <div className=\"chat-people\">\r\n                <div className=\"chat-ib\">\r\n                  <h5>{lastMessage.sender_no === 1 ? 'Sender' : 'Receiver'}</h5>\r\n                  <p>{lastMessage.message_content}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,WAAWA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,EAAE;EAC/C;EACA,MAAMC,SAAS,GAAG,CAAC,CAAC;EACpBF,QAAQ,CAACG,OAAO,CAACC,OAAO,IAAI;IAC1B,IAAIA,OAAO,CAACC,SAAS,KAAK,CAAC,IAAID,OAAO,CAACE,WAAW,KAAK,CAAC,EAAE;MAAE;MAC1D,MAAMC,MAAM,GAAGC,IAAI,CAACC,GAAG,CAACL,OAAO,CAACC,SAAS,EAAED,OAAO,CAACE,WAAW,CAAC,GAAG,GAAG,GAAGE,IAAI,CAACE,GAAG,CAACN,OAAO,CAACC,SAAS,EAAED,OAAO,CAACE,WAAW,CAAC;MACxH,IAAI,CAACJ,SAAS,CAACK,MAAM,CAAC,EAAE;QACtBL,SAAS,CAACK,MAAM,CAAC,GAAG,EAAE;MACxB;MACAL,SAAS,CAACK,MAAM,CAAC,CAACI,IAAI,CAACP,OAAO,CAAC;IACjC;EACF,CAAC,CAAC;EAEF,MAAMQ,eAAe,GAAIL,MAAM,IAAK;IAClC;IACA,MAAMM,oBAAoB,GAAGX,SAAS,CAACK,MAAM,CAAC;IAC9C;IACAN,YAAY,CAACY,oBAAoB,CAAC;EACpC,CAAC;EAED,oBACEf,OAAA;IAAKgB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,EACpCC,MAAM,CAACC,IAAI,CAACf,SAAS,CAAC,CAACgB,GAAG,CAAC,CAACX,MAAM,EAAEY,KAAK,KAAK;MAC7C,MAAMC,YAAY,GAAGlB,SAAS,CAACK,MAAM,CAAC;MACtC,MAAMc,WAAW,GAAGD,YAAY,CAACA,YAAY,CAACE,MAAM,GAAG,CAAC,CAAC;MACzD,oBACExB,OAAA;QAAiBgB,SAAS,EAAC,eAAe;QAACS,OAAO,EAAEA,CAAA,KAAMX,eAAe,CAACL,MAAM,CAAE;QAAAQ,QAAA,eAChFjB,OAAA;UAAKgB,SAAS,EAAC,WAAW;UAAAC,QAAA,eACxBjB,OAAA;YAAKgB,SAAS,EAAC,aAAa;YAAAC,QAAA,eAC1BjB,OAAA;cAAKgB,SAAS,EAAC,SAAS;cAAAC,QAAA,gBACtBjB,OAAA;gBAAAiB,QAAA,EAAKM,WAAW,CAAChB,SAAS,KAAK,CAAC,GAAG,QAAQ,GAAG;cAAU;gBAAAmB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC9D7B,OAAA;gBAAAiB,QAAA,EAAIM,WAAW,CAACO;cAAe;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC,GARER,KAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASV,CAAC;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACE,EAAA,GAxCQ9B,WAAW;AA0CpB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}