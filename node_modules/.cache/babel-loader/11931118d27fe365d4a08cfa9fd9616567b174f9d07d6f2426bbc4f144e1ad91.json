{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack\\\\Workspace\\\\dongsung\\\\src\\\\components\\\\message\\\\MessageList.js\";\nimport React from 'react';\nimport './messageList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageList({\n  messages,\n  onSelectMessage\n}) {\n  // 사용자별 마지막 메시지를 찾아서 그룹화\n  const groupedMessages = messages.reduce((groups, message) => {\n    const key = message.sender_no; // 예시로 보낸 사용자를 기준으로 그룹화\n    if (!groups[key]) {\n      groups[key] = [];\n    }\n    groups[key].push(message);\n    return groups;\n  }, {});\n\n  // 각 그룹별로 마지막 메시지를 가져옴\n  const lastMessages = Object.values(groupedMessages).map(group => group[group.length - 1]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-list-container\",\n    children: lastMessages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-list-box\",\n      onClick: () => onSelectMessage(message),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-list\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-people\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-ib\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: message.sender_no === 1 ? 'Sender' : 'Receiver'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: message.message_content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, message.message_no, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = MessageList;\nexport default MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MessageList","messages","onSelectMessage","groupedMessages","reduce","groups","message","key","sender_no","push","lastMessages","Object","values","map","group","length","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","message_content","message_no","_c","$RefreshReg$"],"sources":["C:/FullStack/Workspace/dongsung/src/components/message/MessageList.js"],"sourcesContent":["import React from 'react';\r\nimport './messageList.css'; \r\n\r\nfunction MessageList({ messages, onSelectMessage }) {\r\n  // 사용자별 마지막 메시지를 찾아서 그룹화\r\n  const groupedMessages = messages.reduce((groups, message) => {\r\n    const key = message.sender_no; // 예시로 보낸 사용자를 기준으로 그룹화\r\n    if (!groups[key]) {\r\n      groups[key] = [];\r\n    }\r\n    groups[key].push(message);\r\n    return groups;\r\n  }, {});\r\n\r\n  // 각 그룹별로 마지막 메시지를 가져옴\r\n  const lastMessages = Object.values(groupedMessages).map(group => group[group.length - 1]);\r\n\r\n  return (\r\n    <div className=\"message-list-container\">\r\n      {lastMessages.map(message => (\r\n        <div key={message.message_no} className=\"chat-list-box\" onClick={() => onSelectMessage(message)}>\r\n          <div className=\"chat-list\">\r\n            <div className=\"chat-people\">\r\n              <div className=\"chat-ib\">\r\n                <h5>{message.sender_no === 1 ? 'Sender' : 'Receiver'}</h5>\r\n                <p>{message.message_content}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageList;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,SAASC,WAAWA,CAAC;EAAEC,QAAQ;EAAEC;AAAgB,CAAC,EAAE;EAClD;EACA,MAAMC,eAAe,GAAGF,QAAQ,CAACG,MAAM,CAAC,CAACC,MAAM,EAAEC,OAAO,KAAK;IAC3D,MAAMC,GAAG,GAAGD,OAAO,CAACE,SAAS,CAAC,CAAC;IAC/B,IAAI,CAACH,MAAM,CAACE,GAAG,CAAC,EAAE;MAChBF,MAAM,CAACE,GAAG,CAAC,GAAG,EAAE;IAClB;IACAF,MAAM,CAACE,GAAG,CAAC,CAACE,IAAI,CAACH,OAAO,CAAC;IACzB,OAAOD,MAAM;EACf,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEN;EACA,MAAMK,YAAY,GAAGC,MAAM,CAACC,MAAM,CAACT,eAAe,CAAC,CAACU,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACA,KAAK,CAACC,MAAM,GAAG,CAAC,CAAC,CAAC;EAEzF,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,EACpCP,YAAY,CAACG,GAAG,CAACP,OAAO,iBACvBP,OAAA;MAA8BiB,SAAS,EAAC,eAAe;MAACE,OAAO,EAAEA,CAAA,KAAMhB,eAAe,CAACI,OAAO,CAAE;MAAAW,QAAA,eAC9FlB,OAAA;QAAKiB,SAAS,EAAC,WAAW;QAAAC,QAAA,eACxBlB,OAAA;UAAKiB,SAAS,EAAC,aAAa;UAAAC,QAAA,eAC1BlB,OAAA;YAAKiB,SAAS,EAAC,SAAS;YAAAC,QAAA,gBACtBlB,OAAA;cAAAkB,QAAA,EAAKX,OAAO,CAACE,SAAS,KAAK,CAAC,GAAG,QAAQ,GAAG;YAAU;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC1DvB,OAAA;cAAAkB,QAAA,EAAIX,OAAO,CAACiB;YAAe;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC,GAREhB,OAAO,CAACkB,UAAU;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASvB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACG,EAAA,GA9BQzB,WAAW;AAgCpB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}