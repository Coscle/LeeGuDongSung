{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack\\\\Workspace\\\\dongsung\\\\src\\\\components\\\\signUp\\\\FindId.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { openDatabase, getUserDataBySnsAddress } from '../../db';\nimport Swal from 'sweetalert2';\nimport './SignUp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FindId = () => {\n  _s();\n  const navigate = useNavigate();\n  const [snsAddress, setSnsAddress] = useState('');\n  const [email, setEmail] = useState('');\n  const handleFindId = async event => {\n    event.preventDefault();\n    const sweetalert = (title, contents, icon, confirmButtonText) => {\n      Swal.fire({\n        title: title,\n        text: contents,\n        icon: icon,\n        confirmButtonText: confirmButtonText\n      });\n    };\n    try {\n      const db = await openDatabase();\n      const userSNS = await getUserDataBySnsAddress(db, snsAddress);\n      if (userSNS) {\n        setEmail(userSNS.email); // 이메일을 상태로 설정\n      } else {\n        sweetalert('해당 SNS 정보로 등록된 이메일이 없습니다.');\n      }\n    } catch (error) {\n      console.error('아이디 찾기 중 오류 발생:', error);\n      sweetalert('아이디 찾기 중 오류가 발생했습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC544\\uC774\\uB514 \\uCC3E\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFindId,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"snsAddress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"snsAddress\",\n          value: snsAddress,\n          onChange: event => setSnsAddress(event.target.value),\n          placeholder: \"SNS \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"signup-button\",\n        children: \"\\uC544\\uC774\\uB514 \\uCC3E\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"signup-button\",\n        onClick: () => {\n          navigate('/FindPassWord');\n        },\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uCC3E\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), email && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD68C\\uC6D0\\uB2D8\\uC758 \\uC774\\uBA54\\uC77C(Id)\\uC785\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 41\n        }, this), \"email : \", email, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 61\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 66\n        }, this), \"\\uC544\\uC774\\uB514\\uB97C \\uC78A\\uC9C0\\uC54A\\uAC8C \\uC8FC\\uC758\\uD574\\uC8FC\\uC138\\uC694!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(FindId, \"KyUw9tJ5SQuelFABnXSWVWai32s=\", false, function () {\n  return [useNavigate];\n});\n_c = FindId;\nexport default FindId;\nvar _c;\n$RefreshReg$(_c, \"FindId\");","map":{"version":3,"names":["React","useState","useNavigate","openDatabase","getUserDataBySnsAddress","Swal","jsxDEV","_jsxDEV","FindId","_s","navigate","snsAddress","setSnsAddress","email","setEmail","handleFindId","event","preventDefault","sweetalert","title","contents","icon","confirmButtonText","fire","text","db","userSNS","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["C:/FullStack/Workspace/dongsung/src/components/signUp/FindId.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { openDatabase, getUserDataBySnsAddress} from '../../db'; \r\nimport Swal from 'sweetalert2'\r\nimport './SignUp.css';\r\n\r\nconst FindId = () => {\r\n  const navigate = useNavigate(); \r\n  const [snsAddress, setSnsAddress] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n  const handleFindId = async (event) => {\r\n    event.preventDefault(); \r\n\r\n  const sweetalert = (title, contents, icon, confirmButtonText) => {\r\n        Swal.fire({\r\n            title: title,\r\n            text: contents,\r\n            icon: icon,\r\n            confirmButtonText: confirmButtonText\r\n            })\r\n    }\r\n\r\n    try {\r\n      const db = await openDatabase();\r\n      const userSNS = await getUserDataBySnsAddress(db, snsAddress);\r\n      if (userSNS) {\r\n        setEmail(userSNS.email); // 이메일을 상태로 설정\r\n      } else {\r\n        sweetalert('해당 SNS 정보로 등록된 이메일이 없습니다.');\r\n      }\r\n    } catch (error) {\r\n      console.error('아이디 찾기 중 오류 발생:', error);\r\n      sweetalert('아이디 찾기 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n      \r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <h2>아이디 찾기</h2>\r\n      <form onSubmit={handleFindId}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"snsAddress\"></label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"snsAddress\"\r\n            value={snsAddress}\r\n            onChange={(event) => setSnsAddress(event.target.value)}\r\n            placeholder=\"SNS 주소를 입력해주세요.\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"signup-button\">아이디 찾기</button>\r\n        <button type=\"button\" className=\"signup-button\" onClick={()=>{navigate('/FindPassWord')}}>비밀번호 찾기</button>\r\n      </form>\r\n      {email && (\r\n        <div className=\"result\">\r\n          <br/><h3>회원님의 이메일(Id)입니다.<br/><br/>email : {email}<br/><br/>아이디를 잊지않게 주의해주세요!</h3>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindId;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}