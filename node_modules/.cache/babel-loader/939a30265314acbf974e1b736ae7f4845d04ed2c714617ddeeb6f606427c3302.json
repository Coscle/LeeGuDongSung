{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack\\\\Workspace\\\\dongsung\\\\src\\\\components\\\\message\\\\MessageBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MessageList from './MessageList';\nimport MessageDetail from './MessageDetail';\n\n// 가짜 데이터\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tempMessages = [{\n  id: 1,\n  sender: 'User1',\n  title: 'Hello',\n  content: 'Hi there!',\n  date: '2024-06-10'\n}, {\n  id: 2,\n  sender: 'User2',\n  title: 'Meeting',\n  content: 'Let\\'s have a meeting.',\n  date: '2024-06-09'\n}];\nfunction MessageBoard() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [selectedMessage, setSelectedMessage] = useState(null);\n  /*\r\n    useEffect(() => {\r\n      // 서버에서 쪽지 목록을 가져오는 함수\r\n      const fetchMessages = async () => {\r\n        try {\r\n          const response = await fetch('/api/messages');\r\n          const data = await response.json();\r\n          setMessages(data);\r\n        } catch (error) {\r\n          console.error('Error fetching messages:', error);\r\n        }\r\n      };\r\n  \r\n      fetchMessages();\r\n    }, []);\r\n  \r\n    const handleSelectMessage = (message) => {\r\n      setSelectedMessage(message);\r\n    };\r\n  */\n  useEffect(() => {\n    // 가짜 데이터를 가져오는 함수\n    setMessages(tempMessages);\n  }, []);\n  const handleSelectMessage = message => {\n    setSelectedMessage(message);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uBA54\\uC138\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(MessageList, {\n        messages: messages,\n        onSelectMessage: handleSelectMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageDetail, {\n        message: selectedMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(MessageBoard, \"iuKRa8DC1NqRBe6Lk7j5aDjHKyQ=\");\n_c = MessageBoard;\nexport default MessageBoard;\nvar _c;\n$RefreshReg$(_c, \"MessageBoard\");","map":{"version":3,"names":["React","useState","useEffect","MessageList","MessageDetail","jsxDEV","_jsxDEV","tempMessages","id","sender","title","content","date","MessageBoard","_s","messages","setMessages","selectedMessage","setSelectedMessage","handleSelectMessage","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","onSelectMessage","_c","$RefreshReg$"],"sources":["C:/FullStack/Workspace/dongsung/src/components/message/MessageBoard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MessageList from './MessageList';\r\nimport MessageDetail from './MessageDetail';\r\n\r\n// 가짜 데이터\r\n  const tempMessages = [\r\n  { id: 1, sender: 'User1', title: 'Hello', content: 'Hi there!', date: '2024-06-10' },\r\n  { id: 2, sender: 'User2', title: 'Meeting', content: 'Let\\'s have a meeting.', date: '2024-06-09' },\r\n  \r\n];\r\n\r\nfunction MessageBoard() {\r\n\r\n\r\n\r\n  const [messages, setMessages] = useState([]);\r\n  const [selectedMessage, setSelectedMessage] = useState(null);\r\n/*\r\n  useEffect(() => {\r\n    // 서버에서 쪽지 목록을 가져오는 함수\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const response = await fetch('/api/messages');\r\n        const data = await response.json();\r\n        setMessages(data);\r\n      } catch (error) {\r\n        console.error('Error fetching messages:', error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n  }, []);\r\n\r\n  const handleSelectMessage = (message) => {\r\n    setSelectedMessage(message);\r\n  };\r\n*/\r\n\tuseEffect(() => {\r\n\t    // 가짜 데이터를 가져오는 함수\r\n\t    setMessages(tempMessages);\r\n\t  }, []);\r\n\t\r\n\t  const handleSelectMessage = (message) => {\r\n\t    setSelectedMessage(message);\r\n\t  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>메세지</h1>\r\n      <div style={{ display: 'flex' }}>\r\n        <MessageList messages={messages} onSelectMessage={handleSelectMessage} />\r\n        <MessageDetail message={selectedMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageBoard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACE,MAAMC,YAAY,GAAG,CACrB;EAAEC,EAAE,EAAE,CAAC;EAAEC,MAAM,EAAE,OAAO;EAAEC,KAAK,EAAE,OAAO;EAAEC,OAAO,EAAE,WAAW;EAAEC,IAAI,EAAE;AAAa,CAAC,EACpF;EAAEJ,EAAE,EAAE,CAAC;EAAEC,MAAM,EAAE,OAAO;EAAEC,KAAK,EAAE,SAAS;EAAEC,OAAO,EAAE,wBAAwB;EAAEC,IAAI,EAAE;AAAa,CAAC,CAEpG;AAED,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EAItB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCC,SAAS,CAAC,MAAM;IACZ;IACAc,WAAW,CAACT,YAAY,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,mBAAmB,GAAIC,OAAO,IAAK;IACvCF,kBAAkB,CAACE,OAAO,CAAC;EAC7B,CAAC;EAEF,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACZnB,OAAA;MAAKoB,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAN,QAAA,gBAC9Bf,OAAA,CAACH,WAAW;QAACY,QAAQ,EAAEA,QAAS;QAACa,eAAe,EAAET;MAAoB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzEnB,OAAA,CAACF,aAAa;QAACgB,OAAO,EAAEH;MAAgB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACX,EAAA,CA5CQD,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AA8CrB,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}