{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack\\\\Workspace\\\\dongsung\\\\src\\\\components\\\\signUp\\\\VerifyPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { openDatabase, getUserDataByPassword } from '../../db';\nimport './SignUp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerifyPassword = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleVerifyPassword = async event => {\n    event.preventDefault();\n    try {\n      const db = await openDatabase();\n      const userPassword = await getUserDataByPassword(db, password);\n      if (userPassword) {\n        setEmail(userPassword.email);\n      } else {\n        alert('비밀번호가 틀렸습니다.');\n      }\n    } catch (error) {\n      console.error('비밀번호 확인 중 오류 발생:', error);\n      alert('비밀번호 확인 중 오류가 발생했습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleVerifyPassword,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: event => setPassword(event.target.value),\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"signup-button\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), email && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/EditProfile', {\n          state: {\n            email\n          }\n        }),\n        className: \"signup-button\",\n        children: \"\\uB2E4\\uC74C (\\uB0B4 \\uC815\\uBCF4 \\uC785\\uB825)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(VerifyPassword, \"3EppOPrTUbqGnofT+5nt0Tjfe+w=\", false, function () {\n  return [useNavigate];\n});\n_c = VerifyPassword;\nexport default VerifyPassword;\nvar _c;\n$RefreshReg$(_c, \"VerifyPassword\");","map":{"version":3,"names":["React","useState","useNavigate","openDatabase","getUserDataByPassword","jsxDEV","_jsxDEV","VerifyPassword","_s","navigate","email","setEmail","password","setPassword","handleVerifyPassword","event","preventDefault","db","userPassword","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","required","onClick","state","_c","$RefreshReg$"],"sources":["C:/FullStack/Workspace/dongsung/src/components/signUp/VerifyPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { openDatabase,  getUserDataByPassword} from '../../db'; \r\nimport './SignUp.css';\r\n\r\nconst VerifyPassword = () => {\r\n  const navigate = useNavigate(); \r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleVerifyPassword = async (event) => {\r\n    event.preventDefault(); \r\n\r\n    try {\r\n      const db = await openDatabase();\r\n      const userPassword = await getUserDataByPassword(db, password);\r\n      if (userPassword) {\r\n        setEmail(userPassword.email);\r\n\t\t} else {\r\n        alert('비밀번호가 틀렸습니다.');\r\n      }\r\n    } catch (error) {\r\n      console.error('비밀번호 확인 중 오류 발생:', error);\r\n      alert('비밀번호 확인 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <h2>비밀번호 확인</h2>\r\n      <form onSubmit={handleVerifyPassword}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\"></label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(event) => setPassword(event.target.value)}\r\n            placeholder=\"비밀번호를 입력해주세요.\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"signup-button\">비밀번호 확인</button>\r\n      </form>\r\n      {email && (\r\n        <div className=\"result\">\r\n          <br/><button onClick={()=>navigate('/EditProfile', {state: {email}})} className='signup-button'>\r\n          다음 (내 정보 입력)</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerifyPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}