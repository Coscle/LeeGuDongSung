{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack\\\\Workspace\\\\dongsung\\\\src\\\\components\\\\profile\\\\UserProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { openDatabase, getUserData } from '../../db'; // 수정된 경로\nimport Swal from 'sweetalert2';\nimport './profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const {\n    userId\n  } = useParams(); // URL에서 userId(이메일) 가져오기\n  const [heartClicked, setHeartClicked] = useState(false);\n  const [user, setUser] = useState({\n    nickname: '',\n    posts: [],\n    savedPosts: [],\n    tags: [],\n    profilePicture: null,\n    // 프로필 사진 추가\n    selfIntroduction: ''\n  });\n  const sweetalert = (title, contents, icon, confirmButtonText) => {\n    Swal.fire({\n      title: title,\n      text: contents,\n      icon: icon,\n      confirmButtonText: confirmButtonText\n    });\n  };\n  useEffect(() => {\n    const loadUserData = async () => {\n      try {\n        const db = await openDatabase();\n        const userData = await getUserData(db, userId); // userId로 데이터 가져오기\n        if (userData) {\n          setUser({\n            nickname: userData.nickname,\n            posts: userData.posts || [],\n            savedPosts: userData.savedPosts || [],\n            tags: userData.tags || [],\n            profilePicture: userData.profilePicture,\n            selfIntroduction: userData.selfIntroduction\n          });\n        }\n      } catch (error) {\n        console.error('Error loading user data:', error);\n      }\n    };\n    loadUserData();\n  }, [userId]);\n  const handleHeartClick = () => {\n    setHeartClicked(!heartClicked);\n    console.log('Heart clicked!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-details\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [user.profilePicture ? /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"pic\",\n          src: user.profilePicture,\n          alt: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pic-placeholder\",\n          children: \"No profile picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), \" \", user.nickname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: `heart-icon ${heartClicked ? 'clicked' : ''}`,\n          onClick: handleHeartClick,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            role: \"img\",\n            \"aria-label\": \"heart\",\n            children: \"\\u2764\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-right2\",\n      onClick: () => sweetalert('유저가 차단되었습니다.'),\n      children: \"\\uCC28\\uB2E8\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-posts\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [user.nickname, \" \\uB2D8\\uC758 \\uAC8C\\uC2DC\\uBB3C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-content\",\n          children: user.posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `/post/${post.id}`,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"saved-posts\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uC790\\uAE30\\uC18C\\uAC1C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-content\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"post-item\",\n            children: user.selfIntroduction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-right1\",\n      onClick: () => sweetalert('쪽지를 보내시겠습니까?'),\n      children: \"\\uCABD\\uC9C0 \\uBCF4\\uB0B4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tags\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD14C\\uADF8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: user.tags.map(tag => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: tag\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfile, \"4wyd1+VPN2TiBpFFJVF//+sJBU4=\", false, function () {\n  return [useParams];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useState","useEffect","useParams","openDatabase","getUserData","Swal","jsxDEV","_jsxDEV","UserProfile","_s","userId","heartClicked","setHeartClicked","user","setUser","nickname","posts","savedPosts","tags","profilePicture","selfIntroduction","sweetalert","title","contents","icon","confirmButtonText","fire","text","loadUserData","db","userData","error","console","handleHeartClick","log","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","role","map","post","href","id","content","tag","_c","$RefreshReg$"],"sources":["C:/FullStack/Workspace/dongsung/src/components/profile/UserProfile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { openDatabase, getUserData } from '../../db'; // 수정된 경로\r\nimport Swal from 'sweetalert2'\r\nimport './profile.css';\r\n\r\nconst UserProfile = () => {\r\n  const { userId } = useParams(); // URL에서 userId(이메일) 가져오기\r\n  const [heartClicked, setHeartClicked] = useState(false);\r\n  const [user, setUser] = useState({\r\n    nickname: '',\r\n    posts: [],\r\n    savedPosts: [],\r\n    tags: [],\r\n    profilePicture: null, // 프로필 사진 추가\r\n    selfIntroduction: ''\r\n  });\r\n  const sweetalert = (title, contents, icon, confirmButtonText) => {\r\n        Swal.fire({\r\n            title: title,\r\n            text: contents,\r\n            icon: icon,\r\n            confirmButtonText: confirmButtonText\r\n            })\r\n    }\r\n  useEffect(() => {\r\n    const loadUserData = async () => {\r\n      try {\r\n        const db = await openDatabase();\r\n        const userData = await getUserData(db, userId); // userId로 데이터 가져오기\r\n        if (userData) {\r\n          setUser({\r\n            nickname: userData.nickname,\r\n            posts: userData.posts || [],\r\n            savedPosts: userData.savedPosts || [],\r\n            tags: userData.tags || [],\r\n            profilePicture: userData.profilePicture,\r\n            selfIntroduction: userData.selfIntroduction\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error('Error loading user data:', error);\r\n      }\r\n    };\r\n\r\n    loadUserData();\r\n  }, [userId]);\r\n\r\n  const handleHeartClick = () => {\r\n    setHeartClicked(!heartClicked);\r\n    console.log('Heart clicked!');\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"profile-details\">\r\n        <div>\r\n          {user.profilePicture ? (\r\n            <img className=\"pic\" src={user.profilePicture} alt=\"Profile\" />\r\n          ) : (\r\n            <div className=\"pic-placeholder\">No profile picture</div>\r\n          )}\r\n          <a className=\"info\">\r\n            <strong></strong> {user.nickname}\r\n          </a>\r\n          <a className={`heart-icon ${heartClicked ? 'clicked' : ''}`} onClick={handleHeartClick}>\r\n            <span role=\"img\" aria-label=\"heart\">❤️</span>\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <button className=\"btn-right2\" onClick={() => sweetalert('유저가 차단되었습니다.')}>차단하기</button>\r\n      <div className=\"posts-container\">\r\n        <div className=\"my-posts\">\r\n          <h2>{user.nickname} 님의 게시물</h2>\r\n          <div className=\"post-content\">\r\n            {user.posts.map((post) => (\r\n              <div key={post.id} className=\"post-item\">\r\n                <a href={`/post/${post.id}`}>\r\n                  <h3>{post.title}</h3>\r\n                  <p>{post.content}</p>\r\n                </a>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"saved-posts\">\r\n          <h2>자기소개</h2>\r\n          <div className=\"post-content\">\r\n            <a className=\"post-item\">{user.selfIntroduction}</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button className=\"btn-right1\" onClick={() => sweetalert('쪽지를 보내시겠습니까?')}>쪽지 보내기</button>\r\n      <div className=\"tags\">\r\n        <h2>테그</h2>\r\n        <ul>\r\n          {user.tags.map((tag) => (\r\n            <li key={tag}>{tag}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}