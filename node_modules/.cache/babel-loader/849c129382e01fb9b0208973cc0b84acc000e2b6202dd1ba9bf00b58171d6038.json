{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack\\\\Workspace\\\\dongsung\\\\src\\\\components\\\\message\\\\MessageList.js\";\nimport React from 'react';\nimport './messageList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageList({\n  onSelectMessage\n}) {\n  // 임시 데이터\n  const messages = [{\n    message_no: 1,\n    sender_no: 1,\n    receiver_no: 2,\n    message_content: \"첫 번째 메시지입니다.\"\n  }, {\n    message_no: 2,\n    sender_no: 2,\n    receiver_no: 1,\n    message_content: \"두 번째 메시지입니다.\"\n  }, {\n    message_no: 3,\n    sender_no: 1,\n    receiver_no: 2,\n    message_content: \"세 번째 메시지입니다.\"\n  }];\n\n  // 대화방 목록 생성\n  const chatRooms = {};\n  messages.forEach(message => {\n    const chatKey = Math.min(message.sender_no, message.receiver_no) + '_' + Math.max(message.sender_no, message.receiver_no);\n    if (!chatRooms[chatKey]) {\n      chatRooms[chatKey] = [];\n    }\n    chatRooms[chatKey].push(message);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-list-container\",\n    children: Object.values(chatRooms).map((roomMessages, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-room\",\n      children: roomMessages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-list-box\",\n        onClick: () => onSelectMessage(message),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-list\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-people\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-ib\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: message.sender_no === 1 ? 'Sender' : 'Receiver'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: message.message_content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this)\n      }, message.message_no, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_c = MessageList;\nexport default MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MessageList","onSelectMessage","messages","message_no","sender_no","receiver_no","message_content","chatRooms","forEach","message","chatKey","Math","min","max","push","className","children","Object","values","map","roomMessages","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/FullStack/Workspace/dongsung/src/components/message/MessageList.js"],"sourcesContent":["import React from 'react';\r\nimport './messageList.css'; \r\n\r\nfunction MessageList({ onSelectMessage }) {\r\n  // 임시 데이터\r\n  const messages = [\r\n    {\r\n      message_no: 1,\r\n      sender_no: 1,\r\n      receiver_no: 2,\r\n      message_content: \"첫 번째 메시지입니다.\"\r\n    },\r\n    {\r\n      message_no: 2,\r\n      sender_no: 2,\r\n      receiver_no: 1,\r\n      message_content: \"두 번째 메시지입니다.\"\r\n    },\r\n    {\r\n      message_no: 3,\r\n      sender_no: 1,\r\n      receiver_no: 2,\r\n      message_content: \"세 번째 메시지입니다.\"\r\n    }\r\n  ];\r\n\r\n  // 대화방 목록 생성\r\n  const chatRooms = {};\r\n  messages.forEach(message => {\r\n    const chatKey = Math.min(message.sender_no, message.receiver_no) + '_' + Math.max(message.sender_no, message.receiver_no);\r\n    if (!chatRooms[chatKey]) {\r\n      chatRooms[chatKey] = [];\r\n    }\r\n    chatRooms[chatKey].push(message);\r\n  });\r\n\r\n  return (\r\n    <div className=\"message-list-container\">\r\n      {Object.values(chatRooms).map((roomMessages, index) => (\r\n        <div key={index} className=\"chat-room\">\r\n          {roomMessages.map(message => (\r\n            <div key={message.message_no} className=\"chat-list-box\" onClick={() => onSelectMessage(message)}>\r\n              <div className=\"chat-list\">\r\n                <div className=\"chat-people\">\r\n                  <div className=\"chat-ib\">\r\n                    <h5>{message.sender_no === 1 ? 'Sender' : 'Receiver'}</h5>\r\n                    <p>{message.message_content}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}