{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack\\\\Workspace\\\\dongsung\\\\src\\\\components\\\\recruitboard\\\\RecruitBoardModify.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BoardModify from '../board/BoardModify';\nimport SideFilter from '../board/SideFilter';\nimport { useNavigate } from 'react-router-dom';\nimport './recruitBoardModify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecruitBoardModify = () => {\n  _s();\n  const [initialValues, setInitialValues] = useState({}); // 초기 값으로 빈 객체를 설정\n  const navigate = useNavigate();\n  const [tags, setTags] = useState();\n  useEffect(() => {\n    // const fetchBoardData = async () => {\n    //   try {\n    //     const boardNo = 123; \n    //     const response = await fetch(`API_ENDPOINT/${boardNo}`); \n    //     if (response.ok) {\n    //       const data = await response.json();\n    //       setInitialValues(data); \n    //     } else {\n    //       throw new Error('Failed to fetch board data');\n    //     }\n    //   } catch (error) {\n    //     console.error('Error fetching board data:', error);\n    //     // 오류 처리를 여기에 추가할 수 있습니다.\n    //   }\n    // };\n\n    // fetchBoardData();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const handleSubmit = formData => {\n    console.log('Modified form data:', formData);\n    // 여기에서 수정된 내용을 서버로 전송하거나 다른 작업을 수행\n    navigate('/recruitboard', () => {\n      window.location.reload();\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modify-board-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"side-filter\",\n      children: /*#__PURE__*/_jsxDEV(SideFilter, {\n        showTopSearch: false,\n        tags: tags,\n        setTags: setTags\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-write-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"board-write-title\",\n        children: \"\\uC5EC\\uD589 \\uBA54\\uC774\\uD2B8 \\uCC3E\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(BoardModify, {\n        initialValues: initialValues,\n        tags: tags,\n        setTags: setTags,\n        onSubmit: handleSubmit,\n        isModify: true,\n        category: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(RecruitBoardModify, \"Xiem9SVe1kGjFjvdfvzuS79q2Go=\", false, function () {\n  return [useNavigate];\n});\n_c = RecruitBoardModify;\nexport default RecruitBoardModify;\nvar _c;\n$RefreshReg$(_c, \"RecruitBoardModify\");","map":{"version":3,"names":["React","useState","useEffect","BoardModify","SideFilter","useNavigate","jsxDEV","_jsxDEV","RecruitBoardModify","_s","initialValues","setInitialValues","navigate","tags","setTags","handleSubmit","formData","console","log","window","location","reload","className","children","showTopSearch","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","isModify","category","_c","$RefreshReg$"],"sources":["C:/FullStack/Workspace/dongsung/src/components/recruitboard/RecruitBoardModify.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport BoardModify from '../board/BoardModify';\r\nimport SideFilter from '../board/SideFilter';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './recruitBoardModify.css';\r\n\r\nconst RecruitBoardModify = () => {\r\n  const [initialValues, setInitialValues] = useState({}); // 초기 값으로 빈 객체를 설정\r\n  const navigate = useNavigate();\r\n  const [tags, setTags] = useState();\r\n\r\n  useEffect(() => {\r\n    // const fetchBoardData = async () => {\r\n    //   try {\r\n    //     const boardNo = 123; \r\n    //     const response = await fetch(`API_ENDPOINT/${boardNo}`); \r\n    //     if (response.ok) {\r\n    //       const data = await response.json();\r\n    //       setInitialValues(data); \r\n    //     } else {\r\n    //       throw new Error('Failed to fetch board data');\r\n    //     }\r\n    //   } catch (error) {\r\n    //     console.error('Error fetching board data:', error);\r\n    //     // 오류 처리를 여기에 추가할 수 있습니다.\r\n    //   }\r\n    // };\r\n\r\n    // fetchBoardData();\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleSubmit = (formData) => {\r\n    console.log('Modified form data:', formData);\r\n    // 여기에서 수정된 내용을 서버로 전송하거나 다른 작업을 수행\r\n    navigate('/recruitboard', ()=>{window.location.reload()}); \r\n  };\r\n\r\n  return (\r\n    <div className=\"modify-board-container\">\r\n      <div className=\"side-filter\">\r\n        <SideFilter showTopSearch={false} tags={tags} setTags={setTags} />\r\n      </div>\r\n      <div className=\"board-write-container\">\r\n     \t <h1 className=\"board-write-title\">여행 메이트 찾기</h1>\r\n        <BoardModify initialValues={initialValues} tags={tags} setTags={setTags} onSubmit={handleSubmit} isModify={true} category={1} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecruitBoardModify;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxD,MAAMW,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC;EAElCC,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;;IAEA;EAAA,CACD,EAAE,EAAE,CAAC;EAEN,MAAMa,YAAY,GAAIC,QAAQ,IAAK;IACjCC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,QAAQ,CAAC;IAC5C;IACAJ,QAAQ,CAAC,eAAe,EAAE,MAAI;MAACO,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAAA,CAAC,CAAC;EAC3D,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrChB,OAAA;MAAKe,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1BhB,OAAA,CAACH,UAAU;QAACoB,aAAa,EAAE,KAAM;QAACX,IAAI,EAAEA,IAAK;QAACC,OAAO,EAAEA;MAAQ;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC,eACNrB,OAAA;MAAKe,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACrChB,OAAA;QAAIe,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/CrB,OAAA,CAACJ,WAAW;QAACO,aAAa,EAAEA,aAAc;QAACG,IAAI,EAAEA,IAAK;QAACC,OAAO,EAAEA,OAAQ;QAACe,QAAQ,EAAEd,YAAa;QAACe,QAAQ,EAAE,IAAK;QAACC,QAAQ,EAAE;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7H,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CA5CID,kBAAkB;EAAA,QAELH,WAAW;AAAA;AAAA2B,EAAA,GAFxBxB,kBAAkB;AA8CxB,eAAeA,kBAAkB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}