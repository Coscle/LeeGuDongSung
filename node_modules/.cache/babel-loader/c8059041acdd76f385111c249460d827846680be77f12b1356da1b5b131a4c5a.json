{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStack\\\\Workspace\\\\dongsung\\\\src\\\\components\\\\signUp\\\\VerifyPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom'; // useLocation 추가\nimport { openDatabase, getUserDataByPassword } from '../../db';\nimport Swal from 'sweetalert2';\nimport './SignUp.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerifyPassword = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation(); // useLocation 사용\n  const {\n    email\n  } = location.state || {}; // 전달된 state에서 email 추출\n  const [password, setPassword] = useState('');\n  const sweetalert = (title, contents, icon, confirmButtonText) => {\n    Swal.fire({\n      title: title,\n      text: contents,\n      icon: icon,\n      confirmButtonText: confirmButtonText\n    });\n  };\n  const handleVerifyPassword = async event => {\n    event.preventDefault();\n    try {\n      const db = await openDatabase();\n      const userPassword = await getUserDataByPassword(db, password);\n      if (userPassword && userPassword.email === email) {\n        // 이메일이 일치하는지 확인\n        navigate('/EditProfile', {\n          state: {\n            email\n          }\n        });\n      } else {\n        sweetalert('비밀번호가 틀렸습니다.');\n      }\n    } catch (error) {\n      console.error('비밀번호 확인 중 오류 발생:', error);\n      sweetalert('비밀번호 확인 중 오류가 발생했습니다.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleVerifyPassword,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: event => setPassword(event.target.value),\n          placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"signup-button\",\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(VerifyPassword, \"K5x1AOwextnDKICwGDHWdljmxnk=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = VerifyPassword;\nexport default VerifyPassword;\nvar _c;\n$RefreshReg$(_c, \"VerifyPassword\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","openDatabase","getUserDataByPassword","Swal","jsxDEV","_jsxDEV","VerifyPassword","_s","navigate","location","email","state","password","setPassword","sweetalert","title","contents","icon","confirmButtonText","fire","text","handleVerifyPassword","event","preventDefault","db","userPassword","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/FullStack/Workspace/dongsung/src/components/signUp/VerifyPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom'; // useLocation 추가\r\nimport { openDatabase, getUserDataByPassword } from '../../db'; \r\nimport Swal from 'sweetalert2'\r\nimport './SignUp.css';\r\n\r\nconst VerifyPassword = () => {\r\n  const navigate = useNavigate(); \r\n  const location = useLocation(); // useLocation 사용\r\n  const { email } = location.state || {}; // 전달된 state에서 email 추출\r\n  const [password, setPassword] = useState('');\r\n  const sweetalert = (title, contents, icon, confirmButtonText) => {\r\n        Swal.fire({\r\n            title: title,\r\n            text: contents,\r\n            icon: icon,\r\n            confirmButtonText: confirmButtonText\r\n            })\r\n    }\r\n  const handleVerifyPassword = async (event) => {\r\n    event.preventDefault(); \r\n\r\n    try {\r\n      const db = await openDatabase();\r\n      const userPassword = await getUserDataByPassword(db, password);\r\n      if (userPassword && userPassword.email === email) { // 이메일이 일치하는지 확인\r\n        navigate('/EditProfile', { state: { email } });\r\n      } else {\r\n        sweetalert('비밀번호가 틀렸습니다.');\r\n      }\r\n    } catch (error) {\r\n      console.error('비밀번호 확인 중 오류 발생:', error);\r\n      sweetalert('비밀번호 확인 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <h2>비밀번호 확인</h2>\r\n      <form onSubmit={handleVerifyPassword}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\"></label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(event) => setPassword(event.target.value)}\r\n            placeholder=\"비밀번호를 입력해주세요.\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"signup-button\">비밀번호 확인</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerifyPassword;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAC7D,SAASC,YAAY,EAAEC,qBAAqB,QAAQ,UAAU;AAC9D,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM;IAAEU;EAAM,CAAC,GAAGD,QAAQ,CAACE,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMgB,UAAU,GAAGA,CAACC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,iBAAiB,KAAK;IAC3Df,IAAI,CAACgB,IAAI,CAAC;MACNJ,KAAK,EAAEA,KAAK;MACZK,IAAI,EAAEJ,QAAQ;MACdC,IAAI,EAAEA,IAAI;MACVC,iBAAiB,EAAEA;IACnB,CAAC,CAAC;EACV,CAAC;EACH,MAAMG,oBAAoB,GAAG,MAAOC,KAAK,IAAK;IAC5CA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAI;MACF,MAAMC,EAAE,GAAG,MAAMvB,YAAY,CAAC,CAAC;MAC/B,MAAMwB,YAAY,GAAG,MAAMvB,qBAAqB,CAACsB,EAAE,EAAEZ,QAAQ,CAAC;MAC9D,IAAIa,YAAY,IAAIA,YAAY,CAACf,KAAK,KAAKA,KAAK,EAAE;QAAE;QAClDF,QAAQ,CAAC,cAAc,EAAE;UAAEG,KAAK,EAAE;YAAED;UAAM;QAAE,CAAC,CAAC;MAChD,CAAC,MAAM;QACLI,UAAU,CAAC,cAAc,CAAC;MAC5B;IACF,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxCZ,UAAU,CAAC,uBAAuB,CAAC;IACrC;EACF,CAAC;EAED,oBACET,OAAA;IAAKuB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BxB,OAAA;MAAAwB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChB5B,OAAA;MAAM6B,QAAQ,EAAEb,oBAAqB;MAAAQ,QAAA,gBACnCxB,OAAA;QAAKuB,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBxB,OAAA;UAAO8B,OAAO,EAAC;QAAU;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClC5B,OAAA;UACE+B,IAAI,EAAC,UAAU;UACfC,EAAE,EAAC,UAAU;UACbC,KAAK,EAAE1B,QAAS;UAChB2B,QAAQ,EAAGjB,KAAK,IAAKT,WAAW,CAACS,KAAK,CAACkB,MAAM,CAACF,KAAK,CAAE;UACrDG,WAAW,EAAC,sEAAe;UAC3BC,QAAQ;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN5B,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAACR,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAjDID,cAAc;EAAA,QACDP,WAAW,EACXC,WAAW;AAAA;AAAA2C,EAAA,GAFxBrC,cAAc;AAmDpB,eAAeA,cAAc;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}